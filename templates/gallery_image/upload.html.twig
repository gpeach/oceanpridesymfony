{% extends 'base.html.twig' %}

{% block content %}
    <div class="container py-5">
        <h1 class="mb-4 text-center">üì§ Upload to Gallery</h1>

        <div class="card shadow-sm mx-auto border-red-deep" style="max-width: 600px;">
            <div class="card-body">
                {{ form_start(form, { attr: { id: 'uploadForm', enctype: 'multipart/form-data' } }) }}

                <div class="form-floating mb-3">
                    {{ form_widget(form.name, { attr: { class: 'form-control', placeholder: 'File Name' } }) }}
                    <label for="{{ form.name.vars.id }}">Title / Label</label>
                </div>

                <div class="mb-3">
                    <label for="{{ form.file.vars.id }}" class="form-label fw-semibold">Choose a photo or video</label>
                    {{ form_widget(form.file, { attr: { class: 'form-control' } }) }}
                </div>

                <button type="submit" class="btn btn-red w-100">
                    ‚¨ÜÔ∏è Upload File
                </button>

                {{ form_end(form) }}
            </div>
        </div>

        <div class="progress mt-4 d-none" id="uploadProgress" style="height: 20px; border-radius: 50px; overflow: hidden;">
            <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: 0%">0%</div>
        </div>

        <div class="alert mt-3 d-none text-center" id="uploadResult"></div>
    </div>

    <script>
        const form = document.getElementById('uploadForm');
        const progressBar = document.querySelector('.progress-bar');
        const progressWrapper = document.getElementById('uploadProgress');
        const result = document.getElementById('uploadResult');

        form.addEventListener('submit', function (e) {
            e.preventDefault();

            const formData = new FormData(form);
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '{{ path('gallery_upload') }}', true);

            xhr.upload.addEventListener('progress', function (e) {
                if (e.lengthComputable) {
                    const percent = Math.round((e.loaded / e.total) * 100);
                    progressWrapper.classList.remove('d-none');
                    progressBar.style.width = percent + '%';
                    progressBar.innerText = percent + '%';
                }
            });

            xhr.onload = function () {
                if (xhr.status === 200) {
                    result.classList.remove('d-none', 'alert-danger');
                    result.classList.add('alert-success');
                    result.innerHTML = '‚úÖ Upload complete! <a href=\"{{ path('gallery_index') }}\" class=\"text-decoration-underline text-reset\">View Gallery</a>';
                    form.reset();
                    progressBar.style.width = '0%';
                    progressBar.innerText = '0%';
                } else {
                    result.classList.remove('d-none', 'alert-success');
                    result.classList.add('alert-danger');
                    result.textContent = '‚ùå Upload failed: ' + xhr.responseText;
                }
            };

            xhr.onerror = function () {
                result.classList.remove('d-none', 'alert-success');
                result.classList.add('alert-danger');
                result.textContent = '‚ùå Network error during upload: ' + xhr.responseText;
            };

            xhr.send(formData);
        });
    </script>
{% endblock %}
